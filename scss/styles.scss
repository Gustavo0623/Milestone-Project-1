// 3-5 SCSS partial files, imported
@use 'variables';
@use 'mixins';
@use 'functions';

// Use the @error directive to throw an error if the value of $font-size is not a valid font size
@if not unit(variables.$font-size) {
    @error "Invalid font size: #{$font-size}";
}


// 10-15 nested selectors, with at least 2 uses of the SCSS ampersand (&)
body {

    max-width: 100vw;
    min-height: 100vh;
    overflow: hidden;
    font-family: fontstack(variables.$fonts);
    padding: 0;

    img {
        user-select: none;
    }

    header {

        @include mixins.flex-row;
        margin-top: 2vh;
        text-align: center;
        flex-wrap: nowrap;
        justify-content: space-between;
        background-color: variables.$light-background;
        border-radius: variables.$border-radius;
        padding: 0% 10%;
        max-height: 17.5vh;
    

        .score {

            @include mixins.flex-col;
            justify-content: space-around;
            font-size: 1.3em;
            font-weight: 900;
            min-width: 15%;

            #h-score {
                @include mixins.score-display();
            } 
            #h-score-sign {
                margin-top: 10%;
                margin-bottom: 15%;
            }
            #c-score {
                @include mixins.score-display();

            }
            #c-score-sign {
                margin-top: 10%;
                margin-bottom: 15%;
            }
        }
        .title {

            h1 {
                font-size: variables.$title-size;
                margin-top: 5%;
            }
            #dev {
                @include mixins.msg-text-font()
            }
        }
    }
    .background {

        position: absolute;
        display: flex;
        z-index: variables.$back;
        width: variables.$fill-container;
        height: 88%;
        object-fit: fill;
        overflow: variables.$hide;
        left: 0vw;
        top: 0vh;

        #background-image {
            min-height: 100%;
            width: variables.$fill-container;
        }
    }
    #game-items {
        position: sticky;
        max-width: variables.$page-width;
        height: 68.2vh;
        overflow: variables.$hide;
    }
    #winning-msg {

        @include mixins.flex-col;
        background-color: #fff3;
        position: absolute;
        justify-items: center;
        justify-content: space-evenly;
        align-items: center;
        width: 30vw;
        height: 65vh;
        text-align: center;
        left: 35vw;
        bottom: 15vh;
        border-radius: variables.$border-radius;

        #msg {
            font-weight: 900;
            font-size: 1.8em;
        }

        @for $i from 2 through 4 {
            #msg-#{$i} {
                @include mixins.msg-text-font();
                padding: 0em 2em;
            }
        }

        #go {
            cursor: pointer;
            font-family: fontstack(variables.$fonts);
            @include mixins.msg-text-font();
            box-shadow: 0px 2px 3px;
            border-radius: variables.$border-radius;
            padding: 2%;
            background: rgb(54,157,248);
            background: linear-gradient(0deg, #6D96C5 0%, #B0D6FC 100%);
        }
    }
    footer {
        min-width: 100vw;
        height: 15vh;
        overflow-x: variables.$hide;
        z-index: variables.$back;

        #floor {
            position: absolute;
            min-height: 15%;
            width: 110%;
            right: -2%;
            overflow: variables.$hide;
            z-index: variables.$back;
        }

        #attribute {
            text-decoration: none;
            color: #fff9;
            position: absolute;
            left: .5%;
            bottom: .5vh;
            z-index: 1;
        }
    }
}

// Use the @if directive to conditionally apply styles based on the value of $font-size
// can be changed to detect value of screen size width variable and conditionally apply styles accodingly
@if variables.$font-size > 2em {
  body {
    font-size: variables.$font-size;
  }
} @else {
  body {
    font-size: 20px;
  }
}


